{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Workplace/github/bitcoinPredictor0429/BitcoinPrediction/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState, useContext, useEffect } from 'react';\nimport './App.css';\nimport { create } from 'apisauce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the input value\n  const [inputValue, setInputValue] = useState('');\n  const [dateSevenDaysBefore, setDateSevenDaysBefore] = useState('');\n  const [dateSixDaysBefore, setDateSixDaysBefore] = useState('');\n  const [dateFiveDaysBefore, setDateFiveDaysBefore] = useState('');\n  const [dateFourDaysBefore, setDateFourDaysBefore] = useState('');\n  const [dateThreeDaysBefore, setDateThreeDaysBefore] = useState('');\n  const [dateTwoDaysBefore, setDateTwoDaysBefore] = useState('');\n  const [data, setData] = useState([]);\n  const [featuresDate, setFeaturesDate] = useState([]);\n  const [featuresHigh, setFeaturesHigh] = useState([]);\n  const [featuresLow, setFeaturesLow] = useState([]);\n  const [featuresOpen, setFeaturesOpen] = useState([]);\n  const [featuresClose, setFeaturesClose] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true); // State variable to track loading state\n\n  const currentDate = new Date();\n  // Add one day to the current date\n  const tomorrowDate = new Date(currentDate);\n  const twoDayDate = new Date(currentDate);\n  const threeDayDate = new Date(currentDate);\n  const fourthDayDate = new Date(currentDate);\n  const fifthDayDate = new Date(currentDate);\n  const sixthDayDate = new Date(currentDate);\n  const seventhDayDate = new Date(currentDate);\n  tomorrowDate.setDate(currentDate.getDate() + 1);\n  twoDayDate.setDate(currentDate.getDate() + 2);\n  threeDayDate.setDate(currentDate.getDate() + 3);\n  fourthDayDate.setDate(currentDate.getDate() + 4);\n  fifthDayDate.setDate(currentDate.getDate() + 5);\n  sixthDayDate.setDate(currentDate.getDate() + 6);\n  seventhDayDate.setDate(currentDate.getDate() + 7);\n  const tomorrowDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const tomorrowMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const tomorrowYear = tomorrowDate.getFullYear();\n  const twoDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const twoDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const twoDayYear = tomorrowDate.getFullYear();\n  const threeDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const threeDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const threeDayYear = tomorrowDate.getFullYear();\n  const fourthDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const fourthDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const fourthDayYear = tomorrowDate.getFullYear();\n  const fifthDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const fifthDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const fifthDayear = tomorrowDate.getFullYear();\n\n  // Format the date as \"YYYY-MM-DD\"\n  const tomorrowFormatted = `${tomorrowYear}-${tomorrowMonth}-${tomorrowDay}`;\n  const towDayFormatted = `${twoDayYear}-${twoDayMonth}-${twoDayDay}`;\n\n  // Event handler to update the input value\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Calculate the date 7 days before if the entered value is a valid date\n    const enteredDate = new Date(value);\n    if (!isNaN(enteredDate.getTime())) {\n      const sevenDaysBefore = new Date(enteredDate);\n      sevenDaysBefore.setDate(sevenDaysBefore.getDate() - 7);\n      setDateSevenDaysBefore(sevenDaysBefore.toISOString().split('T')[0]);\n      const dateSixDaysBefore = new Date(enteredDate);\n      dateSixDaysBefore.setDate(dateSixDaysBefore.getDate() - 6);\n      setDateSixDaysBefore(dateSixDaysBefore.toISOString().split('T')[0]);\n      const dateFiveDaysBefore = new Date(enteredDate);\n      dateFiveDaysBefore.setDate(dateFiveDaysBefore.getDate() - 5);\n      setDateFiveDaysBefore(dateFiveDaysBefore.toISOString().split('T')[0]);\n      const dateFourDaysBefore = new Date(enteredDate);\n      dateFourDaysBefore.setDate(dateFourDaysBefore.getDate() - 4);\n      setDateFourDaysBefore(dateFourDaysBefore.toISOString().split('T')[0]);\n      const dateThreeDaysBefore = new Date(enteredDate);\n      dateThreeDaysBefore.setDate(dateThreeDaysBefore.getDate() - 3);\n      setDateThreeDaysBefore(dateThreeDaysBefore.toISOString().split('T')[0]);\n      const dateTwoDaysBefore = new Date(enteredDate);\n      dateTwoDaysBefore.setDate(sevenDaysBefore.getDate() - 2);\n      setDateTwoDaysBefore(dateTwoDaysBefore.toISOString().split('T')[0]);\n    } else {\n      // Clear the calculated date if the entered value is not a valid date\n      setDateSevenDaysBefore('');\n      setDateSixDaysBefore('');\n      setDateFiveDaysBefore('');\n      setDateFourDaysBefore('');\n      setDateThreeDaysBefore('');\n      setDateTwoDaysBefore('');\n    }\n  };\n  const fetchData = async () => {\n    setLoading(true); // Set loading to true before making the request\n    //https://api.coindesk.com/v1/bpi/currentprice.json\n    //http://18.116.42.185/predict/${tomorrowFormatted}\n    try {\n      const response = await fetch(`http://18.116.42.185/predict/${dateSixDaysBefore}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        return response.json(); // Parse JSON response\n      }).then(data => {\n        setFeaturesDate(data.predictions.Date);\n        setFeaturesHigh(data.predictions.btcHigh);\n        setFeaturesLow(data.predictions.btcLow);\n        setFeaturesOpen(data.predictions.btcOpen);\n        setFeaturesClose(data.predictions.btcClose);\n        console.log(data.predictions.Date);\n        setData(data); // Set the data in state\n      });\n    } catch (error) {\n      // Handle any errors that occur during the request\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false); // Set loading to false after the request completes\n    }\n  };\n  let dataArrayOpen = [];\n  let dataArrayClose = [];\n  let dataArrayDate = [];\n  let dataArrayHigh = [];\n  let dataArrayLow = [];\n  let reverseDataArrayOpen = [];\n  let reverseDataArrayClose = [];\n  let reverseDataArrayDate = [];\n  let reverseDataArrayHigh = [];\n  let reverseDataArrayLow = [];\n\n  // Check if data has a value\n  const hasData = predictions !== null && predictions !== undefined && predictions !== '';\n  if (featuresDate.length != 0 && featuresDate != undefined) {\n    console.log(\"============actual price===============\");\n    if (featuresOpen != null || featuresOpen != undefined) {\n      dataArrayOpen = Object.entries(featuresOpen).map(([key, value]) => value);\n    }\n    if (featuresClose != null || featuresClose != undefined) {\n      dataArrayClose = Object.entries(featuresClose).map(([key, value]) => value);\n    }\n    if (featuresDate != null || featuresDate != undefined) {\n      dataArrayDate = Object.entries(featuresDate).map(([key, value]) => value);\n    }\n    if (featuresHigh != null || featuresHigh != undefined) {\n      dataArrayHigh = Object.entries(featuresHigh).map(([key, value]) => value);\n    }\n    if (featuresLow != null || featuresLow != undefined) {\n      dataArrayLow = Object.entries(featuresLow).map(([key, value]) => value);\n    }\n    dataArrayDate.push(tomorrowFormatted);\n    reverseDataArrayOpen = dataArrayOpen.reverse();\n    reverseDataArrayClose = dataArrayClose.reverse();\n    reverseDataArrayDate = dataArrayDate.reverse();\n    reverseDataArrayHigh = dataArrayHigh.reverse();\n    reverseDataArrayLow = dataArrayLow.reverse();\n    console.log(dataArrayOpen);\n    console.log(dataArrayClose);\n    console.log(dataArrayDate);\n    //DO NOTHING\n  } else {\n    console.log(\"============actual price not null===============\");\n    console.log(dataArrayOpen);\n  }\n  const renderItem = ({\n    item\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      borderBottom: '1px solid black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n  const renderHeader = header => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      fontWeight: 'bold',\n      borderBottom: '1px solid black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bitcoin Price Predictor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"YYYY-MM-DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), dateSevenDaysBefore && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date 7 days before: \", dateSevenDaysBefore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), dateSixDaysBefore && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date 6 days before: \", dateSixDaysBefore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          marginRight: '5px'\n        },\n        children: [renderHeader('Date'), reverseDataArrayDate.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: renderItem({\n            item\n          })\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          marginRight: '5px'\n        },\n        children: [renderHeader('Open'), reverseDataArrayOpen.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: renderItem({\n            item\n          })\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          marginRight: '5px'\n        },\n        children: [renderHeader('Close'), reverseDataArrayClose.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: renderItem({\n            item\n          })\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: [renderHeader('High'), reverseDataArrayHigh.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: renderItem({\n            item\n          })\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: [renderHeader('Low'), reverseDataArrayLow.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: renderItem({\n            item\n          })\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData(),\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c8X2lco2GVA090V76+lbeUzbPbU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useContext","useEffect","create","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","dateSevenDaysBefore","setDateSevenDaysBefore","dateSixDaysBefore","setDateSixDaysBefore","dateFiveDaysBefore","setDateFiveDaysBefore","dateFourDaysBefore","setDateFourDaysBefore","dateThreeDaysBefore","setDateThreeDaysBefore","dateTwoDaysBefore","setDateTwoDaysBefore","data","setData","featuresDate","setFeaturesDate","featuresHigh","setFeaturesHigh","featuresLow","setFeaturesLow","featuresOpen","setFeaturesOpen","featuresClose","setFeaturesClose","predictions","setPredictions","loading","setLoading","currentDate","Date","tomorrowDate","twoDayDate","threeDayDate","fourthDayDate","fifthDayDate","sixthDayDate","seventhDayDate","setDate","getDate","tomorrowDay","String","padStart","tomorrowMonth","getMonth","tomorrowYear","getFullYear","twoDayDay","twoDayMonth","twoDayYear","threeDayDay","threeDayMonth","threeDayYear","fourthDayDay","fourthDayMonth","fourthDayYear","fifthDayDay","fifthDayMonth","fifthDayear","tomorrowFormatted","towDayFormatted","handleInputChange","event","value","target","enteredDate","isNaN","getTime","sevenDaysBefore","toISOString","split","fetchData","response","fetch","then","ok","Error","json","btcHigh","btcLow","btcOpen","btcClose","console","log","error","dataArrayOpen","dataArrayClose","dataArrayDate","dataArrayHigh","dataArrayLow","reverseDataArrayOpen","reverseDataArrayClose","reverseDataArrayDate","reverseDataArrayHigh","reverseDataArrayLow","hasData","undefined","length","Object","entries","map","key","push","reverse","renderItem","item","style","padding","borderBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","renderHeader","header","fontWeight","className","type","onChange","placeholder","display","listStyle","marginRight","id","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Workplace/github/bitcoinPredictor0429/BitcoinPrediction/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState, useContext, useEffect } from 'react';\nimport './App.css';\nimport { create } from 'apisauce';\n\nfunction App() {\n\n  // State to store the input value\n  const [inputValue, setInputValue] = useState('');\n  const [dateSevenDaysBefore, setDateSevenDaysBefore] = useState('');\n  const [dateSixDaysBefore, setDateSixDaysBefore] = useState('');\n  const [dateFiveDaysBefore, setDateFiveDaysBefore] = useState('');\n  const [dateFourDaysBefore, setDateFourDaysBefore] = useState('');\n  const [dateThreeDaysBefore, setDateThreeDaysBefore] = useState('');\n  const [dateTwoDaysBefore, setDateTwoDaysBefore] = useState('');\n\n  const [data, setData] = useState([]);\n  const [featuresDate, setFeaturesDate] = useState([]);\n  const [featuresHigh, setFeaturesHigh] = useState([]);\n  const [featuresLow, setFeaturesLow] = useState([]);\n  const [featuresOpen, setFeaturesOpen] = useState([]);\n  const [featuresClose, setFeaturesClose] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(true); // State variable to track loading state\n\n  const currentDate = new Date();\n  // Add one day to the current date\n  const tomorrowDate = new Date(currentDate);\n  const twoDayDate = new Date(currentDate);\n  const threeDayDate = new Date(currentDate);\n  const fourthDayDate = new Date(currentDate);\n  const fifthDayDate = new Date(currentDate);\n  const sixthDayDate = new Date(currentDate);\n  const seventhDayDate = new Date(currentDate);\n\n  tomorrowDate.setDate(currentDate.getDate() + 1);\n  twoDayDate.setDate(currentDate.getDate() + 2);\n  threeDayDate.setDate(currentDate.getDate() + 3);\n  fourthDayDate.setDate(currentDate.getDate() + 4);\n  fifthDayDate.setDate(currentDate.getDate() + 5);\n  sixthDayDate.setDate(currentDate.getDate() + 6);\n  seventhDayDate.setDate(currentDate.getDate() + 7);\n\n  const tomorrowDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const tomorrowMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const tomorrowYear = tomorrowDate.getFullYear();\n\n  const twoDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const twoDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const twoDayYear = tomorrowDate.getFullYear();\n\n  const threeDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const threeDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const threeDayYear = tomorrowDate.getFullYear();\n\n  const fourthDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const fourthDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const fourthDayYear = tomorrowDate.getFullYear();\n\n  const fifthDayDay = String(tomorrowDate.getDate()).padStart(2, '0');\n  const fifthDayMonth = String(tomorrowDate.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\n  const fifthDayear = tomorrowDate.getFullYear();\n\n  // Format the date as \"YYYY-MM-DD\"\n  const tomorrowFormatted = `${tomorrowYear}-${tomorrowMonth}-${tomorrowDay}`;\n  const towDayFormatted = `${twoDayYear}-${twoDayMonth}-${twoDayDay}`;\n\n   // Event handler to update the input value\n   const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Calculate the date 7 days before if the entered value is a valid date\n    const enteredDate = new Date(value);\n    if (!isNaN(enteredDate.getTime())) {\n\n      const sevenDaysBefore = new Date(enteredDate);\n      sevenDaysBefore.setDate(sevenDaysBefore.getDate() - 7);\n      setDateSevenDaysBefore(sevenDaysBefore.toISOString().split('T')[0]);\n\n      const dateSixDaysBefore = new Date(enteredDate);\n      dateSixDaysBefore.setDate(dateSixDaysBefore.getDate() - 6);\n      setDateSixDaysBefore(dateSixDaysBefore.toISOString().split('T')[0]);\n\n      const dateFiveDaysBefore = new Date(enteredDate);\n      dateFiveDaysBefore.setDate(dateFiveDaysBefore.getDate() - 5);\n      setDateFiveDaysBefore(dateFiveDaysBefore.toISOString().split('T')[0]);\n\n      const dateFourDaysBefore = new Date(enteredDate);\n      dateFourDaysBefore.setDate(dateFourDaysBefore.getDate() - 4);\n      setDateFourDaysBefore(dateFourDaysBefore.toISOString().split('T')[0]);\n\n      const dateThreeDaysBefore = new Date(enteredDate);\n      dateThreeDaysBefore.setDate(dateThreeDaysBefore.getDate() - 3);\n      setDateThreeDaysBefore(dateThreeDaysBefore.toISOString().split('T')[0]);\n\n      const dateTwoDaysBefore = new Date(enteredDate);\n      dateTwoDaysBefore.setDate(sevenDaysBefore.getDate() - 2);\n      setDateTwoDaysBefore(dateTwoDaysBefore.toISOString().split('T')[0]);\n\n    } else {\n      // Clear the calculated date if the entered value is not a valid date\n      setDateSevenDaysBefore('');\n      setDateSixDaysBefore('');\n      setDateFiveDaysBefore('');\n      setDateFourDaysBefore('');\n      setDateThreeDaysBefore('');\n      setDateTwoDaysBefore('');\n    }\n  };\n\n  const fetchData = async () => {\n    setLoading(true); // Set loading to true before making the request\n    //https://api.coindesk.com/v1/bpi/currentprice.json\n    //http://18.116.42.185/predict/${tomorrowFormatted}\n    try {\n      const response = await fetch(`http://18.116.42.185/predict/${dateSixDaysBefore}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        return response.json(); // Parse JSON response\n      })\n        .then(data => {\n          setFeaturesDate(data.predictions.Date)\n          setFeaturesHigh(data.predictions.btcHigh)\n          setFeaturesLow(data.predictions.btcLow)\n          setFeaturesOpen(data.predictions.btcOpen)\n          setFeaturesClose(data.predictions.btcClose)\n          console.log(data.predictions.Date)\n          setData(data); // Set the data in state\n        })\n    } catch (error) {\n      // Handle any errors that occur during the request\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false); // Set loading to false after the request completes\n    }\n  };\n \n  let dataArrayOpen = [];\n  let dataArrayClose = [];\n  let dataArrayDate = [];\n  let dataArrayHigh = [];\n  let dataArrayLow = [];\n  let reverseDataArrayOpen = [];\n  let reverseDataArrayClose = [];\n  let reverseDataArrayDate = [];\n  let reverseDataArrayHigh = [];\n  let reverseDataArrayLow = [];\n\n  // Check if data has a value\n  const hasData = predictions !== null && predictions !== undefined && predictions !== '';\n\n  if (featuresDate.length != 0 && featuresDate != undefined) {\n    console.log(\"============actual price===============\")\n    if (featuresOpen != null || featuresOpen != undefined) {\n      dataArrayOpen = Object.entries(featuresOpen).map(([key, value]) => value);\n    }\n    if (featuresClose != null || featuresClose != undefined) {\n      dataArrayClose = Object.entries(featuresClose).map(([key, value]) => value);\n    }\n    if (featuresDate != null || featuresDate != undefined) {\n      dataArrayDate = Object.entries(featuresDate).map(([key, value]) => value);\n    }\n    if (featuresHigh != null || featuresHigh != undefined) {\n      dataArrayHigh = Object.entries(featuresHigh).map(([key, value]) => value);\n    }\n    if (featuresLow != null || featuresLow != undefined) {\n      dataArrayLow = Object.entries(featuresLow).map(([key, value]) => value);\n    }\n    dataArrayDate.push(tomorrowFormatted);\n    reverseDataArrayOpen = dataArrayOpen.reverse();\n    reverseDataArrayClose = dataArrayClose.reverse();\n    reverseDataArrayDate = dataArrayDate.reverse();\n    reverseDataArrayHigh = dataArrayHigh.reverse();\n    reverseDataArrayLow = dataArrayLow.reverse();\n    console.log(dataArrayOpen);\n    console.log(dataArrayClose);\n    console.log(dataArrayDate);\n    //DO NOTHING\n  } else {\n    console.log(\"============actual price not null===============\")\n    console.log(dataArrayOpen)\n  }\n  const renderItem = ({ item }) => (\n    <div style={{ padding: '10px', borderBottom: '1px solid black' }}>\n      <p>{item}</p>\n    </div>\n  );\n  const renderHeader = (header) => (\n    <div style={{ padding: '10px', fontWeight: 'bold', borderBottom: '1px solid black' }}>\n      <p>{header}</p>\n    </div>\n  );\n \n  return (\n    <div className=\"App\">\n      <div>\n        <h2>Bitcoin Price Predictor:</h2>\n\n        {/* Input field with date type */}\n        <input\n          type=\"date\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"YYYY-MM-DD\"\n        />\n        {/* Display the calculated date 7 days before */}\n        {dateSevenDaysBefore && (\n          <p>Date 7 days before: {dateSevenDaysBefore}</p>\n        )}\n          {dateSixDaysBefore && (\n          <p>Date 6 days before: {dateSixDaysBefore}</p>\n        )}\n      </div>\n\n      <div style={{ display: 'flex', }}>\n        <ul style={{ listStyle: 'none', padding: 0, marginRight: '5px' }}>\n          {renderHeader('Date')}\n          {reverseDataArrayDate.map(item => (\n            <li key={item.id}>\n              {renderItem({ item })}\n            </li>\n          ))}\n        </ul>\n        <ul style={{ listStyle: 'none', padding: 0, marginRight: '5px' }}>\n          {renderHeader('Open')}\n          {reverseDataArrayOpen.map(item => (\n            <li key={item.id}>\n              {renderItem({ item })}\n            </li>\n          ))}\n        </ul>\n        <ul style={{ listStyle: 'none', padding: 0, marginRight: '5px' }}>\n          {renderHeader('Close')}\n          {reverseDataArrayClose.map(item => (\n            <li key={item.id}>\n              {renderItem({ item })}\n            </li>\n          ))}\n        </ul>\n        <ul style={{ listStyle: 'none', padding: 0 }}>\n          {renderHeader('High')}\n          {reverseDataArrayHigh.map(item => (\n            <li key={item.id}>\n              {renderItem({ item })}\n            </li>\n          ))}\n        </ul>\n        <ul style={{ listStyle: 'none', padding: 0 }}>\n          {renderHeader('Low')}\n          {reverseDataArrayLow.map(item => (\n            <li key={item.id}>\n              {renderItem({ item })}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button onClick={() => fetchData()}>Add Item</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}