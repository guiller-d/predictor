{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Workplace/github/bitcoinPredictor0429/BitcoinPrediction/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bitcoinPrice, setBitcoinPrice] = useState(null); // State to store the Bitcoin price\n\n  useEffect(() => {\n    // Fetch Bitcoin price data from the CoinDesk API\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch Bitcoin price');\n      }\n      return response.json(); // Parse JSON response\n    }).then(data => {\n      var _data$bpi, _data$bpi$USD;\n      // Extract the Bitcoin price from the response\n      const price = (data === null || data === void 0 ? void 0 : (_data$bpi = data.bpi) === null || _data$bpi === void 0 ? void 0 : (_data$bpi$USD = _data$bpi.USD) === null || _data$bpi$USD === void 0 ? void 0 : _data$bpi$USD.rate) || 'N/A';\n      setBitcoinPrice(price); // Set the Bitcoin price in state\n    }).catch(error => console.error('Error fetching Bitcoin price:', error));\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bitcoin Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Bitcoin Price: $\", bitcoinPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XtoJ8Bz5igf5Kr1l0zNehcerdCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","bitcoinPrice","setBitcoinPrice","fetch","then","response","ok","Error","json","data","_data$bpi","_data$bpi$USD","price","bpi","USD","rate","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Workplace/github/bitcoinPredictor0429/BitcoinPrediction/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [bitcoinPrice, setBitcoinPrice] = useState(null); // State to store the Bitcoin price\n\n  useEffect(() => {\n    // Fetch Bitcoin price data from the CoinDesk API\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch Bitcoin price');\n        }\n        return response.json(); // Parse JSON response\n      })\n      .then(data => {\n        // Extract the Bitcoin price from the response\n        const price = data?.bpi?.USD?.rate || 'N/A';\n        setBitcoinPrice(price); // Set the Bitcoin price in state\n      })\n      .catch(error => console.error('Error fetching Bitcoin price:', error));\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Bitcoin Price</h1>\n      </header>\n      <div>\n        {/* Display the Bitcoin price */}\n        <p>Current Bitcoin Price: ${bitcoinPrice}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,mDAAmD,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MAAA,IAAAC,SAAA,EAAAC,aAAA;MACZ;MACA,MAAMC,KAAK,GAAG,CAAAH,IAAI,aAAJA,IAAI,wBAAAC,SAAA,GAAJD,IAAI,CAAEI,GAAG,cAAAH,SAAA,wBAAAC,aAAA,GAATD,SAAA,CAAWI,GAAG,cAAAH,aAAA,uBAAdA,aAAA,CAAgBI,IAAI,KAAI,KAAK;MAC3Cb,eAAe,CAACU,KAAK,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BtB,OAAA;QAAAsB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACT1B,OAAA;MAAAsB,QAAA,eAEEtB,OAAA;QAAAsB,QAAA,GAAG,0BAAwB,EAACnB,YAAY;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA/BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}